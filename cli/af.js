#!/usr/bin/env node

import chalk from "chalk";
import { Command } from "commander";

import { execShellCommand } from "../lib/execShellCommand.js";
import { importJson } from "../lib/importJson.js";
import { semverCompare } from "../lib/semverCompare.js";

const appPkg = await importJson("../package.json");

const program = new Command();
program
  .version(appPkg.version)
  .command(
    "update",
    "Installs latest version of @olenbetong/appframe-cli globally."
  )
  .command(
    "deploy-cra",
    "Deploy a prebuilt CRA application generated by @olenbetong/react-scripts"
  )
  .command(
    "prepare-bundle",
    "Packs the current project and uploads it to Appframe bundles"
  )
  .command(
    "publish-to-prod",
    "Publishes a deployed application, generates the transaction, and sends it to the production server (download only)"
  )
  .command(
    "generate-data-object",
    "Generates a script to create a data API data object or procedure. (Tip: Pipe to clipboard)"
  )
  .command(
    "publish-bundle",
    "Publishes an Appframe bundle and sends it to the production server (download only)"
  )
  .command(
    "namespace-to-prod",
    "Generates, applies and deploys changes from dev to stage and then download them on prod."
  )
  .command(
    "generate-all",
    "Generates all transactions on dev server, and lists them"
  )
  .command(
    "list-transactions",
    "Lists transactions that will be applied or deployed"
  );

program.action(async () => {
  let latest = (
    await execShellCommand("npm view @olenbetong/appframe-cli version")
  ).trim();

  if (semverCompare(latest, appPkg.version) > 0) {
    console.error(
      chalk.yellow(
        `You are running \`@olenbetong/appframe-cli\` ${appPkg.version}, which is behind the latest release (${latest}).\n`
      )
    );
  }
  program.help();
});

await program.parseAsync(process.argv);
